<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HenLeo&#39;s Blog</title>
  
  <subtitle>学无止境苦与乐</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-17T15:02:04.595Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>起早</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>韦老六子网划分</title>
    <link href="http://yoursite.com/2018/12/17/%E9%9F%A6%E8%80%81%E5%85%AD%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86/"/>
    <id>http://yoursite.com/2018/12/17/韦老六子网划分/</id>
    <published>2018-12-17T14:46:32.000Z</published>
    <updated>2018-12-17T15:02:04.595Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1286432168421</span><br><span class="line"></span><br><span class="line">10000000 = 128</span><br><span class="line">11000000 = 192</span><br><span class="line">11100000 = 224</span><br><span class="line">11110000 = 240</span><br><span class="line">11111000 = 248</span><br><span class="line">11111100 = 252</span><br><span class="line">11111110 = 254</span><br><span class="line">11111111 = 255</span><br><span class="line"></span><br><span class="line">A类：</span><br><span class="line">0.0.0.0 ~ 127.255.255.255</span><br><span class="line">B类：</span><br><span class="line">128.0.0.0 ~ 191.255.255.255</span><br><span class="line">C类：</span><br><span class="line">192.0.0.0 ~ 223.255.255.255</span><br><span class="line">D类：（组播）</span><br><span class="line">224.0.0.0 ~ 239.255.255.255</span><br><span class="line">E类：（保留、科研）</span><br><span class="line">240.0.0.0 ~ 255.255.255.255</span><br></pre></td></tr></table></figure><a id="more"></a> <h3 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h3><p>192.168.1.0   255.255.255.0<br>要求划分 2 个子网  </p><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li><p>判断给出的 IP 地址的类别（A、B、C），确定自然分类的掩码  A-&gt;/8，B-&gt;/16，C-&gt;/24<br> 以上要求为 C 类地址，掩码长度 255.255.255.0（/24）</p></li><li><p>根据要求  确认  具体要划分几个子网后，判断具体需要向主机位借几位<br> 以上要求划分 2 个子网，公式：2 的几次方（n）小于等于 2<br> 2^n $\geq 2$  ====&gt; n = 1<br> 则需要向主机位 借 1 位 即可满足两个子网</p></li><li>写出子网的子网掩码长度<br>255.255.255.00000000 ==借 1 位== =》255.255.255.128（/25）  </li><li>使用公式：256 - 子网掩码最后一段有效数字，得出每个网段的网段间距<br><code>256 - 128 = 128（每个网段的网段间距）</code></li><li><p>使用每个网段的网段间距  相加  相减  得出每个网段的网络地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">网络地址：</span><br><span class="line">192.168.1.0</span><br><span class="line">192.168.1.128</span><br><span class="line">192.168.1.256</span><br></pre></td></tr></table></figure></li><li><p>使用每个网段的网络地址 ==最后一段有效数字减一==，得出上一网段的广播地址  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">网络地址               广播地址                 可用主机地址</span><br><span class="line">192.168.1.0   ---》192.168.1.127 ---》192.168.1.1 ~ 192.168.1.126</span><br><span class="line">192.168.1.128 ---》192.168.1.255 ---》192.168.1.129 ~ 192.168.1.254</span><br><span class="line">192.168.1.256</span><br></pre></td></tr></table></figure></li></ol><p>两个子网如下：<br>192.168.1.0    255.255.255.128<br>192.168.1.128   255.255.255.128  </p><hr><h3 id="例-1："><a href="#例-1：" class="headerlink" title="例 1："></a>例 1：</h3><p>给出一个子网 判断 IP 地址的数量 和 可用 IP 地址的数量<br><code>192.168.1.128   255.255.255.128</code></p><h4 id="步骤：-1"><a href="#步骤：-1" class="headerlink" title="步骤："></a>步骤：</h4><ol><li>将子网掩码的位数计算出来<br><code></code>255.255.255.255.128  /25`</li><li><p>通过子网掩码的位数，去判断网络地址和主机地址的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">主机位的长度（Y）= 32 - 25 = 7</span><br><span class="line">则主机位的长度为 7 bit</span><br></pre></td></tr></table></figure></li><li><p>IP 地址的数量：2 的 Y 次方<br>2^Y^ = 2^7^ = 128  </p></li><li>可用 IP 地址的数量 = IP 地址的数量 - 2（网络地址和广播地址）<br><code>128 - 2 = 126</code>   </li></ol><hr><h3 id="例-2："><a href="#例-2：" class="headerlink" title="例 2："></a>例 2：</h3><p>192.168.1.0/24<br>需求：<br>第一个子网 30 台主机<br>第二个子网 20 台主机<br>第三个子网 10 台主机  </p><h4 id="步骤：-2"><a href="#步骤：-2" class="headerlink" title="步骤："></a>步骤：</h4><ol><li>根据需求分析，第一个子网 要求可用地址为 30 个，则此网络共有 IP 为 30 + 2 = 32</li><li>因为划分子网中 ==IP 地址的数量==  由 ==主机位的长度 Y== 判断<br>则 2^Y^ $\geq 32$ ==&gt; 主机位的长度Y = 5  </li><li>根据计算出来的主机位长度，确定网络位的长度位：32 - 5 = 27<br>则子网掩码长度为 27 的时候可以满足第一个子网的要求<br>255.255.255.11100000—–》255.255.255.224</li><li>使用公式 256 - 子网掩码最后一段中有效数字，得到每个子网的网段间距<br>256 - 224 = 32</li><li><p>使用 32 相加、相减得到每个子网的网络地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">网络地址：</span><br><span class="line">192.168.1.0</span><br><span class="line">192.168.1.32</span><br><span class="line">192.168.1.64</span><br><span class="line">192.168.1.96</span><br><span class="line">192.168.1.128</span><br><span class="line">192.168.1.160</span><br><span class="line">192.168.1.192</span><br><span class="line">192.168.1.224</span><br><span class="line">192.168.1.256</span><br></pre></td></tr></table></figure></li><li><p>使用每个子网的网络地址最后一段的有效数字减一，得出上一段子网的广播地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">网络地址：广播地址</span><br><span class="line">192.168.1.0   ---------192.168.1.31</span><br><span class="line">192.168.1.32  ---------192.168.1.63</span><br><span class="line">192.168.1.64  ---------192.168.1.95</span><br><span class="line">192.168.1.96  ---------192.168.1.127</span><br><span class="line">192.168.1.128 ---------192.168.1.159</span><br><span class="line">192.168.1.160 ---------192.168.1.191</span><br><span class="line">192.168.1.192 ---------192.168.1.223</span><br><span class="line">192.168.1.224 ---------192.168.1.255</span><br><span class="line">192.168.1.256</span><br></pre></td></tr></table></figure></li></ol><p>满足 30 个可用地址<br>192.168.1.0   ———192.168.1.31     可用地址：192.168.1.1 ~ 192.168.1.30<br>满足 20 个可用地址<br>192.168.1.32 ———192.168.1.63    可用地址：192.168.1.33 ~ 192.168.1.62</p><p>10 个可用地址用 30 还是会有浪费，继续子网划分<br>192.168.1.64   255.255.255.224<br>10 + 2 = 12<br>2^Y^ $\geq 12$  ——–》Y = 4<br>网络地址的长度：32 - 4 = 28<br>255.255.255.240<br>网段间距：256 - 240 = 16<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">网络地址：</span><br><span class="line">192.168.1.64</span><br><span class="line">192.168.1.80</span><br><span class="line">192.168.1.96</span><br><span class="line">广播地址</span><br><span class="line">192.168.1.79</span><br><span class="line">192.168.1.95</span><br><span class="line">可用地址：192.168.1.65 ~ 192.168.1.78</span><br><span class="line">        192.168.1.81 ~ 192.168.1.94</span><br></pre></td></tr></table></figure></p><p>满足 10 个可用地址<br>192.168.1.65 ~ 192.168.1.78</p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;128		64		32		16		8		4		2		1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10000000 = 128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11000000 = 192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11100000 = 224&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11110000 = 240&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11111000 = 248&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11111100 = 252&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11111110 = 254&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11111111 = 255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A类：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.0.0.0 ~ 127.255.255.255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B类：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128.0.0.0 ~ 191.255.255.255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C类：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192.0.0.0 ~ 223.255.255.255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D类：（组播）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;224.0.0.0 ~ 239.255.255.255&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;E类：（保留、科研）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;240.0.0.0 ~ 255.255.255.255&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WSL(Windows Subsystem for Linux)</title>
    <link href="http://yoursite.com/2018/11/18/WSL-Windows-Subsystem-for-Linux/"/>
    <id>http://yoursite.com/2018/11/18/WSL-Windows-Subsystem-for-Linux/</id>
    <published>2018-11-18T14:52:49.000Z</published>
    <updated>2018-11-18T14:56:14.858Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/11/18/5bf12c36a29e9.jpg" alt="image"><br><a id="more"></a>  </p><blockquote><p> 有关WSL的介绍这里就不做解释了。另外，本文仅适用于win10 build 16215以及之后的版本，之前的版本可参考<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10#for-anniversary-update-and-creators-update-install-using-lxrun" target="_blank" rel="noopener">官方链接</a>。<br> （可使用“<code>winver</code>”命令查看windows版本号）<br> <img src="https://i.loli.net/2018/11/18/5bf12fc8b50d2.png" alt="image">  </p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li>控制面板-&gt;程序和功能-&gt;启用或关闭Windows功能-&gt;勾选 适用于Linux的Windows子系统<br><img src="https://i.loli.net/2018/11/18/5bf1314da1885.png" alt="image"></li><li>重启电脑  </li><li>打开应用商城搜索“WSL”，可根据自己需求选择安装一个或多个Linux系统：<img src="https://i.loli.net/2018/11/18/5bf13262c2092.png" alt="image">  </li><li>安装完成后可在开始菜单里找到快捷方式并启动，第一次运行需要等待安装并设置用户名、密码。<br><img src="https://i.loli.net/2018/11/18/5bf1333421105.png" alt="image"><br>除此以外，在cmd中使用以下几个命令都可以运行WSL：<br><code>wsl 或者 bash</code><br><code>wsl [command]或者bash -c [command]</code><br>Linux系统名称（如：ubuntu），这跟上面在开始菜单里启动是一样的<br>其中，前两种方式会运行默认的linux系统，当你安装多个linux系统之后可以使用wslconfig来指定<h3 id="使用wslconfig命令进行管理"><a href="#使用wslconfig命令进行管理" class="headerlink" title="使用wslconfig命令进行管理"></a>使用wslconfig命令进行管理</h3></li><li>设置默认运行的linux系统<br><code>wslconfig /setdefault &lt;DistributionName&gt;</code><br>正如上面所说，如果执行<code>wslconfig /setdefault ubuntu</code>，那么执行bash命令则会运行ubuntu</li><li>卸载linux系统<br><code>wslconfig /unregister &lt;DistributionName&gt;</code><br>当系统出现问题，我们可以卸载后重新安装。如：<code>wslconfig /unregeister ubuntu</code></li><li>查看已安装的linux系统<br><code>wslconfig /list</code>  <h3 id="使用wslconfig命令进行管理-1"><a href="#使用wslconfig命令进行管理-1" class="headerlink" title="使用wslconfig命令进行管理"></a>使用wslconfig命令进行管理</h3>当我们运行WSL时，它会用第一次运行时输入的用户名登陆，如果想改为其他用户，可以（以ubuntu为例）：  <pre><code>ubuntu config --default-user root  这样，以后再运行ubuntu它就会默认以root登陆。此外还可以“ubuntu /?”查看其更多使用方法。</code></pre><h3 id="WSL文件系统与本地文件系统互相访问"><a href="#WSL文件系统与本地文件系统互相访问" class="headerlink" title="WSL文件系统与本地文件系统互相访问"></a>WSL文件系统与本地文件系统互相访问</h3></li><li>WSL中访问本地文件<br>在“/mnt”目录下有“c”、“d”、“e”等文件夹，分别表示本地的C盘、D盘、E盘，直接cd到相应路径下即可。  </li><li>本地访问WSL的根目录<br>微软强烈不建议在外部对WSL文件系统进行更改，所以未公开WSL所在的根目录。毕竟有时候我们需要直接读取里面的很多文件（比如说在某个IDE里面设置include path为WSL的/usr/include），如果每次都在WSL里cp命令将其拷贝到本地又太麻烦。下面是其根目录（以ubuntu为例，版本不同可能会有略微差别）：<br><img src="https://i.loli.net/2018/11/18/5bf152e163903.png" alt="image"><br><code>(C:\Users\XXXX\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs)</code>  </li></ol><p><img src="https://i.loli.net/2018/11/18/5bf15888cda6c.png" alt="image">  </p><h4 id="到此为止你就可以在-Windows-使用-Linux-啦，也不用装双系统，麻烦的双系统切换，也不用担心虚拟机的性能损耗好了接下来就和正常玩shell一样了，尽情的享受运行WSL吧（对了，我图里用的是-cmder）"><a href="#到此为止你就可以在-Windows-使用-Linux-啦，也不用装双系统，麻烦的双系统切换，也不用担心虚拟机的性能损耗好了接下来就和正常玩shell一样了，尽情的享受运行WSL吧（对了，我图里用的是-cmder）" class="headerlink" title="到此为止你就可以在 Windows 使用 Linux 啦，也不用装双系统，麻烦的双系统切换，也不用担心虚拟机的性能损耗好了接下来就和正常玩shell一样了，尽情的享受运行WSL吧（对了，我图里用的是 cmder）"></a>到此为止你就可以在 Windows 使用 Linux 啦，也不用装双系统，麻烦的双系统切换，也不用担心虚拟机的性能损耗好了接下来就和正常玩shell一样了，尽情的享受运行WSL吧（对了，我图里用的是 cmder）</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/11/18/5bf12c36a29e9.jpg&quot; alt=&quot;image&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记百大东合水卡破解</title>
    <link href="http://yoursite.com/2018/10/02/%E8%AE%B0%E7%99%BE%E5%A4%A7%E4%B8%9C%E5%90%88%E6%B0%B4%E5%8D%A1%E7%A0%B4%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/10/02/记百大东合水卡破解/</id>
    <published>2018-10-02T07:11:15.000Z</published>
    <updated>2018-11-07T08:18:02.580Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/10/02/5bb2d9aaa7d37.png" alt="image"><br><a id="more"></a>  </p><h2 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h2><h4 id="1-通过多次刷取，使卡内金额发生改变，从而对比发现数据所在扇区"><a href="#1-通过多次刷取，使卡内金额发生改变，从而对比发现数据所在扇区" class="headerlink" title="1. 通过多次刷取，使卡内金额发生改变，从而对比发现数据所在扇区"></a>1. 通过多次刷取，使卡内金额发生改变，从而对比发现数据所在扇区</h4><h4 id="2-现在把数据块拿出来单独分析"><a href="#2-现在把数据块拿出来单独分析" class="headerlink" title="2. 现在把数据块拿出来单独分析"></a>2. 现在把数据块拿出来单独分析</h4><p><img src="https://i.loli.net/2018/10/02/5bb2daa614d84.png" alt="image">  </p><h4 id="3-计算"><a href="#3-计算" class="headerlink" title="3.计算"></a>3.计算</h4><h5 id="我们以第一条数据为例"><a href="#我们以第一条数据为例" class="headerlink" title="我们以第一条数据为例"></a>我们以第一条数据为例</h5><blockquote><p><strong>金额位</strong>（i1、i2）  </p><blockquote><p>金额：<strong>68.35</strong><br>将其转换为十六进制就是 <strong><code>1AB3</code></strong> 接着看一下数据（惊喜有没有）</p><p><img src="https://i.loli.net/2018/10/02/5bb2dc4004586.png" alt="image"><br>倒过来就是 <strong><code>B31A</code></strong> 与 i1、i2 相同<br>这样我们的金额位就简单得到了，下面折腾校验位</p></blockquote></blockquote><blockquote><p><strong>校验位</strong>（checksum）  </p><blockquote><p> 按位取反（事实证明这次破解中没有用到）</p><pre><code>B31A 二进制=&gt;1011001100011010       取反=&gt;0100110011100101           =&gt;4CE5（ps:刚开始我的思路就是以上的按照金额来按位取反，实验证明没P用，过于沙雕，不过鉴于有的卡还是会用到这样的方法，写了就不删了吧）</code></pre><p><strong>下面换个思路</strong><br>我们将金额位和校验位分别转换成十进制<br>金额位：<br><code>B3</code> 转换为十进制：179<br><code>1A</code> 转换为十进制：26  </p><p>校验位：<br><code>FC</code> 转换为十进制：252  </p><p>再将两个金额位的十进制数求和<br>179 + 26 = 205  </p><p>这里先说明一下思路：金额前后两位分别转十进制， 求和，与校验位十进制 差或者和为一个<code>定值</code>，基本上大多数水卡都是这个校验算法。<br>我这里试验过了是以差作为一个定值，所以我就直接计算了：<br>252 - 205 = 47<br>再把结果转成十六进制：<strong><code>2F</code></strong>，这就是我这张卡的<code>定值</code>了。 </p><p>现在我们就可以算校验位了,将金额位的和再与定值相加：<br>B3 + 1A = CD<br>CD + 2F = FC  </p><p>以上 <code>FC</code> 即是计算出来的校验位，我们来和数据中的对比一下 </p><p><img src="https://i.loli.net/2018/10/02/5bb2e8590ce5f.png" alt="image">  </p><p>方法到此结束，我们来看一看成果：<br><img src="https://i.loli.net/2018/10/02/5bb2e92397ebf.jpg" alt="image"><br>(注：本篇文章属于兴趣学习)  </p></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2018/10/02/5bb2d9aaa7d37.png&quot; alt=&quot;image&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/10/02/hello-world/"/>
    <id>http://yoursite.com/2016/10/02/hello-world/</id>
    <published>2016-10-02T07:11:15.000Z</published>
    <updated>2018-10-17T07:12:24.564Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
